For the latest news, visit the SparForte website.

SparForte 2.0.2's focus was bug fixes for SparForte 2.0.1

CHANGES SINCE 2.0.1

1. Fix: When the verbose option is used, Berkeley DB verbose options are enabled for DB_VERB_BACKUP, DB_VERB_DEADLOCK, DB_VERB_FILEOPS, DB_VERB_WAITSFOR.

2. Fix: If btree_io.create fails to create a file, an exception is no longer raised when truncate is attempted.

3. Fix: Dynamic memory within resource handles is freed and files closed prior to deallocation the resource handle.  Fixed order of deallocation to eliminate storage_error for btree freed handles.

4. Fix: In web templates, scripts tags are no longer run if a previous error occurred.  The error flag is not reset either, so errors will appear in the browser window.

5. Fix: btree_io.remove no longer throws an exception when a cursor isn't used (uninitialized variable).  It no longer tries to remove the environment.

6. Fix: btree_io cursors and files no longer give a constant expected message in test phase mode.

7. Change: text templates no longer show error messages on a single line.  Other templates remain unchanged.

8. New: third party tests added to "make releasetest".  First is btree_io positive tests.

9. Fix: exception handlers in inner blocks no longer run when an error occurs in the outer block.

10. Fix: strings.trim end parameter is now optional, as in the documentation.

11. Fix: btree_io cursors no longer raise storage_error if the cursor was in wrong open/close state.  Appropriate error message given.

12. Fix: btree_io files no longer raise storage_error if the file was in wrong open/close state.  Appropriate error message given.

13. Fix: btree_io, doubly lists, dht's (and unfinished vectors package) no longer raise a constraint error if the generic is not initialized with a "new_" function.

14. Fix: exceptions raised in subprograms no longer vanish when the subprogram ends.

15. Fix: JSON decoding now handles backslash escaping correctly.

16. Fix: btreee_io.get_next, get_first, get_list, get_previous, no longer run JSON decoding or a result if raise_exceptions is false and the get failed.

17. Fix: user-defined procedures and functions no longer report semi-colon expected while exiting a block.

18. Fix: "with separate" now works with absolute paths.

19. Fix: btree_io.replace with cursor checks to ensure item exists before writing. 



SparForte 2.0.1's focus was bug fixes for SparForte 2.0

CHANGES SINCE 2.0

1. New: in --test phase mode, variables that are not written to (that is, assigned to or are in out / out parameters) are an error: they should be constants.  If a record field is written to, the whole record is treated as written to.

2. Change: Release tests now test example programs with --test phase mode (instead of the default development phase mode) to ensure the most error checking is applied.  (Also, they really are being tested for a release so --test is the correct flag.)

3. Change: Additional debugging options on GCC C compiles.

4. Fix: for GNU readline prompt, added a newline so "return" displays properly on control-d exit.

5. Change: New, more meaningful message when a -- or comment hides last semi-colon at a command prompt.

6. New: pragma annotate( category ... ) to designate a group of scripts.

7. New: --profile / -P - run profile without logging in or using --login.

8. Fix: Control-C/SIGINT no longer aborts an interactive session if pragma prompt_script has been used.

9. Fix: Clear login shell flag on background processes in pipelines so they don't report a "must use logout" error.  Hopefully fixed, anyway.

10. Fix: removed EINTR handling on close...this is a diagnosic message and should not result in another close attempt.

11. Fix: env no longer raises PROGRAM_ERROR due to broken pipe (e.g. env | head ).

12. Fix: Added a SIGPIPE handler.  The results are ignored but it prevents broken pipe warnings from other commands (e.g. ls -1 | head ).

13. Fix: Bourne shell barewords now expand properly to multiple words if they contain whitespace. (e.g. s := "*.ads *.adb" ; ls $s lists all files matching those endings.  Bareword expansion is not permitted with command names because it complicates AdaScript parameter handling.

14. Fix: Resources are now declared at the block level of the identifier, not the block level of the source line.  Resources are no longer deallocated prematurely.

15. Fix: name of include files displayed properly in error messages.

16. Fix: constant test works correctly with user function out, in out parameters.

17. New: pragma assumption( used, var ) / assumption( written, var ) as a workaround when the language guesses incorrectly if a variable is unused or is not written to.

