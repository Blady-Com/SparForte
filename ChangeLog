For the latest news, visit the SparForte web site.

SparForte 2.2's additional testing and new data type features necessary to implement packages in the future.

CHANGES SINCE 2.1

1. New: Can now subtract one calendar.time value from another.

2. New: New examples: game_24.sp, string_prepend.sp, sumseries.sp, sumsq.sp, ternary_logic.sp, twelve_days.sp, time_function.sp

3. Fix: Anonymous array element type is treated as applied to eliminate concrete/abstract error.

4. New: OS package functions.  os.pid, equivalent to Bourne shell $$. os.error_string (strerror) and documentation fixed.

5. Fix: instead of "identifier not declared", now get "too few parameter" when calling a user function with too few parameters.  Might be a more efficient way to implement this.

6. New: abstract procedures and subprograms.

7. Fix: functions without a return value statement produce an error.

8. New: limited arrays, records and anonymous arrays.

9. Fix: re-raise fixed to work in if statements in an exception handler.

10. New: "nonstandard" software model as a catch-all for no standard.

11. Fix: variables with explicit limited qualifier are now limited.

12. New: return statements may have a when clause, like an exit statement.

13. Refactor: constants are no longer a separate identifier class from variables.  constant is now an identifier usage qualifier like limited and abstract and can be applied to any identifier class.  constants are now variables with a usage of "constant".

14. Change: command variables must now be limited instead of constant, in line with new limited functionality.  They cannot be used in an expression or assigned to.

15. New: at debug prompt, limited variables, like constants, may be assigned a value but will report a warning.

16. Fix: calling a procedure or function with no parameters when parameters were expected produces an appropriate error message.

17. New: types and subtypes may have an affirm clause/block to validate values, as in programming-by-contract.

18. New. raise statements can have a when clause, like an exit statement.

19. Fix: statements starting with paths like /bin/bash and bin/bash are now recognized as shell commands.

20. Fix: broken pipes (such as env | head) no longer show meaningless error messages.

21. Refactor: parser.adb broken up into interpreter.adb and parser child packages.

22. Change: better error message for dollar expansions with missing variable names.

23. New: pragma annotate extended with icon and screenshot fields.

24. Fix: pragma annotate HTML output is html-encoded.

25. Fix: executable statements in blocks no longer allowed type and variable declarations. [verify negative tests]

26. Change: the first word in a statement can be a Bourne shell command with path characters and certain punctuation symbols allowed in the names (e.g. minus).

27. Refactor: to improve performance, type checking suppressed at run-time unless necessary, 11% faster for monty.sp example.

28. Fix: backquotes in a shell word no longer have 2 extra characters after substitution.

29. Fix: unstructured scripts no longer pull/discard top-level declarations early nested block exit.

30. Fix: fixed memory leak with directory_operations.open declaring new resources each time.

31. Change: affirm blocks run in restricted mode as a precaution against side-effects.

32. Change: (Mehdi) Strings package now has more univeral parameters and return results to reduce type casting and to follow a similar design to the numerics package.

